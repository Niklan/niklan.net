name: Quality Tools

on:
  workflow_dispatch:
  pull_request:
    paths-ignore:
      - README.md
      - LICENSE
      - .gitignore
      - scripts/**
  push:
    branches:
      - develop
    paths-ignore:
      - README.md
      - LICENSE
      - .gitignore
      - scripts/**

env:
  PHP_VERSION: 8.2
  COMPOSER_FLAGS: --ansi --no-interaction --no-progress --prefer-dist

jobs:
  # PHPCS checks.
  phpcs:
    name: PHPCS
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install PHP
        uses: shivammathur/setup-php@v2
        with:
          coverage: none
          extensions: intl, zip, intl, zip, date, dom, filter, gd, hash, json, pcre, pdf, session, simplexml, spl, tokenizer, xml
          ini-values: memory_limit=-1
          php-version: ${{ env.PHP_VERSION }}

      - name: Install Composer dependencies
        run: composer install ${{ env.COMPOSER_FLAGS }}

      - name: PHPCS Analyse
        run: composer phpcs

  # PHPStan checks.
  phpstan:
    name: PHPStan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install PHP
        uses: shivammathur/setup-php@v2
        with:
          coverage: none
          extensions: intl, zip, intl, zip, date, dom, filter, gd, hash, json, pcre, pdf, session, simplexml, spl, tokenizer, xml
          ini-values: memory_limit=-1
          php-version: ${{ env.PHP_VERSION }}

      - name: Install Composer dependencies
        run: composer install ${{ env.COMPOSER_FLAGS }}

      - name: PHPCS Analyse
        run: composer phpcs

  # PHPUnit tests.
  phpunit:
    name: PHPUnit
    needs:
      - phpcs
      - phpstan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Copy files for environment
        run: |
          cp ./phpunit.xml.dist ./phpunit.xml
          mkdir -p ./web/sites/default
          cp ./assets/scaffold/settings.local.php ./web/sites/default/settings.local.php
          cp ./.github/workflows/d4d-phpunit/.env ./.env
          cp ./.github/workflows/d4d-phpunit/docker-compose.yml ./docker-compose.yml

      - name: Build PHP container
        run: docker compose up -d --no-deps --build php

      - name: Run docker
        run: docker compose up -d

      - name: Install site dependencies
        run: docker compose exec -T php composer install

      - name: Run tests
        run: docker compose exec -T php composer run phpunit-coverage

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: web/sites/default/files/coverage.xml
